@inject IAppointmentService _appointmentService
@inject DialogService _dialogService

@if (cancelAppointmentStatus == false && rescheduleAppointmentStatus == false)
{
    <div class="row">
        <div class="col-md-6">
            <b>Doctora</b>
            <h3 class="fw-400">@appointmentDetails?.ServiceProviderName</h3>
            <b>Servicio</b>
            <h3 class="fw-400">@appointmentDetails?.ServiceName</h3>
            <b>Horario</b>
            <h3 class="fw-400">@appointmentDetails?.FormattedTime</h3>
        </div>
        <div class="col-md-6">
            <b>Paciente</b>
            <h3 class="fw-400">@appointmentDetails?.ServiceRecipientName</h3>
            <b>Fecha</b>
            <h3 class="fw-400">@appointmentDetails?.FormattedDate</h3>
        </div>
        @if (appointmentDetails?.EndDate > currentTime)
        {
            <div class="col-12 mt-3 text-center">
                <button @onclick="ToggleRescheduleAppointmentStatus" class="btn btn-outline-info btn-sm" type="button">Reprogramar</button>
                <button @onclick="ToggleCancelAppointmentStatus" class="btn btn-outline-danger btn-sm" type="button">Cancelar cita</button>
            </div>
        }
    </div>
}
else if (rescheduleAppointmentStatus == true)
{
    <RescheduleAppointmentPage AppointmentId=@AppointmentId AppointmentDetails=@appointmentDetails ToggleStatus=@ToggleRescheduleAppointmentStatus></RescheduleAppointmentPage>
}
else if (cancelAppointmentStatus == true)
{
    <div class="row">
        <div class="col-md-6">
            <h2 class="fw-400">¿Estás segura de que quieres cancelar la cita?</h2>
        </div>
        <div class="col-md-6 mt-3 text-center">
            <button @onclick="CancelAppointment" class="btn btn-outline-danger btn-sm" type="button">Estoy segura</button>
            <button @onclick="ToggleCancelAppointmentStatus" class="btn btn-outline-secondary btn-sm" type="button">Llévame de vuelta</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public int AppointmentId { get; set; }

    private DateTime currentTime;
    private bool cancelAppointmentStatus = false;
    private bool rescheduleAppointmentStatus = false;
    private AppointmentDetails appointmentDetails;

    protected override void OnInitialized()
    {
        currentTime = DateTime.UtcNow.ToLocalTime();
    }

    protected override async Task OnParametersSetAsync()
    {
        appointmentDetails = await _appointmentService.GetAppointmentDetails(AppointmentId);
    }

    private void ToggleRescheduleAppointmentStatus()
    {
        rescheduleAppointmentStatus = !rescheduleAppointmentStatus;
    }

    private void ToggleCancelAppointmentStatus()
    {
        cancelAppointmentStatus = !cancelAppointmentStatus;
    }

    private async Task CancelAppointment()
    {
        await _appointmentService.CancelAppointment(AppointmentId);
        _dialogService.Close();
    }
}
