@inject IAppointmentService _appointmentService
@inject DialogService _dialogService

<div class="row">
    <div class="col-12">
        <RadzenDropDown class="d-block w-50 m-auto" Placeholder="Doctora" AllowClear="false" TValue="int" TextProperty="EmployeeName"
                        ValueProperty="EmployeeId" Data=@serviceProviders @bind-Value=@selectedEmployeeId
                        Change=@OnEmployeeChange />

        <RadzenDropDown class="d-block w-50 m-auto" Placeholder="Servicio" AllowClear="false" TValue="int" TextProperty="ServiceName"
                        ValueProperty="ServiceId" Disabled=@(selectedEmployeeId == 0)
                        Data=@employeeServices @bind-Value=@selectedServiceId
                        Change=@OnServiceChange />

        <RadzenDatePicker class="d-block w-50 m-auto" TValue="DateTime?" DateFormat="d" Disabled=@(selectedServiceId == 0)
                          @bind-Value=@selectedDate
                          Change=@OnDateChange />

        <RadzenDropDown class="d-block w-50 m-auto" Placeholder="Hora" AllowClear="false" TValue="int" TextProperty="FormattedTime"
                        ValueProperty="ServiceScheduleId" Disabled=@((availableAppointmentSlots?.Count ?? 0) == 0)
                        Data=@availableAppointmentSlots @bind-Value=@selectedServiceScheduleId />

        <RadzenDropDown class="d-block w-50 m-auto" Placeholder="Paciente" AllowClear="false" TValue="int" TextProperty="ServiceRecipientName"
                        ValueProperty="ServiceRecipientId" Data=@serviceRecipients @bind-Value=@selectedServiceRecipientId />
    </div>
    <div class="col-12 text-center">
        <button @onclick="ConfirmAppointmentBooking" disabled="@(selectedServiceScheduleId == 0 || selectedServiceRecipientId == 0)"
                class="btn btn-outline-info btn-sm" type="button">
            Programar cita
        </button>
    </div>
</div>

@code {
    private int selectedEmployeeId;
    private int selectedServiceId;
    private DateTime? selectedDate;
    private int selectedServiceScheduleId;
    private int selectedServiceRecipientId;

    private List<EmployeeDetails> serviceProviders = new List<EmployeeDetails>();
    private List<ServiceDetails> employeeServices = new List<ServiceDetails>();
    private List<ServiceScheduleDetails> availableAppointmentSlots = new List<ServiceScheduleDetails>();
    private List<ServiceRecipientDetails> serviceRecipients = new List<ServiceRecipientDetails>();

    protected override async Task OnParametersSetAsync()
    {
        selectedDate = DateTime.UtcNow.ToLocalTime().Date;
    }

    private async Task OnEmployeeChange()
    {
        // Get employee services
    }

    private async Task OnServiceChange()
    {
        // Get available service schedules for selected date
    }

    private async Task OnDateChange(DateTime? date)
    {
        // Get available service schedules for selected date
    }

    private async Task ConfirmAppointmentBooking()
    {
        // Create appointment with selected data
        _dialogService.Close();
    }
}
