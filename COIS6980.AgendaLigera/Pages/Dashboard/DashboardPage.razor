@page "/dashboard"
@attribute [Authorize(Roles = "Doctora,Secretaria,Paciente")]
@inject IAppointmentService _appointmentService
@inject DialogService _dialogService

<div class="row">
    <div class="col-lg-8">
        <h1 class="fw-400">Citas programadas</h1>
        @if ((appointmentsForSelectedDate?.Count ?? 0) > 0)
        {
            <RadzenDataList WrapItems="true" AllowPaging="true" Data="@appointmentsForSelectedDate" TItem="AppointmentDetails">
                <Template Context="appointment">
                    <div class="row">
                        <div class="col-lg-5">
                            <b>Doctora</b>
                            <h3 class="fw-400">@appointment.ServiceProviderName</h3>
                            <b>Servicio</b>
                            <h3 class="fw-400">@appointment.ServiceName</h3>
                            <b>Hora</b>
                            <h3 class="fw-400">@appointment.FormattedTime</h3>
                        </div>
                        <div class="col-lg-5">
                            <b>Paciente</b>
                            <h3 class="fw-400">@appointment.ServiceRecipientName</h3>
                            <b>Fecha</b>
                            <h3 class="fw-400">@appointment.FormattedDate</h3>
                        </div>
                        <div class="col-lg-2 mt-4">
                            <button @onclick="() => ManageAppointment(appointment.AppointmentId)" class="btn btn-outline-info btn-sm" type="button">Gestionar</button>
                        </div>
                    </div>
                </Template>
            </RadzenDataList>
        }
        else
        {
            <p class="lead mt-3">¡Disfruta tu día! No tiene ninguna cita hoy.</p>
        }
    </div>
    <div class="col-lg-4">
        <h2 class="fw-400">@selectedDate.GetValueOrDefault().ToString("D", new CultureInfo("es-ES"))</h2>
        <RadzenDatePicker @bind-Value=@selectedDate TValue="DateTime?" DateFormat="d" Change=@OnDateChange />
        <hr />
        <button @onclick="ScheduleAppointment" class="btn btn-outline-info btn-sm" type="button">Programar una cita</button>
    </div>
</div>

@code {
    private DateTime? selectedDate;
    private List<AppointmentDetails> appointmentsForSelectedDate = new List<AppointmentDetails>();

    protected override async Task OnInitializedAsync()
    {
        selectedDate = DateTime.UtcNow.ToLocalTime().Date;
        appointmentsForSelectedDate = await _appointmentService.GetAppointmentDetailsListByDate(selectedDate.GetValueOrDefault());
    }

    private async Task OnDateChange(DateTime? date)
    {
        appointmentsForSelectedDate = await _appointmentService.GetAppointmentDetailsListByDate(selectedDate.GetValueOrDefault());
    }

    private async Task ManageAppointment(int appointmentId)
    {
        await _dialogService.OpenAsync<AppointmentDetailsPage>("", new Dictionary<string, object> { { "AppointmentId", appointmentId } });
        appointmentsForSelectedDate = await _appointmentService.GetAppointmentDetailsListByDate(selectedDate.GetValueOrDefault());
    }

    private async Task ScheduleAppointment()
    {
        // Open the appointment scheduler modal
    }
}
