@page "/servicios"
@attribute [Authorize(Roles = "Doctora")]

<div class="row">
    <div class="col-lg-8">
        <h1 class="fw-400">Servicios ofrecidos</h1>
        @if (currentService.ServiceId == 0)
        {
            <p class="lead mt-3">Aún no ha creado ningún servicio. Luego de crear uno, lograrás verlo aquí.</p>
        }
        else
        {
            <div class="row">
                <div class="col-lg-6">
                    <b>Servicio</b>
                    <h3 class="fw-400">@currentService.ServiceName</h3>
                    <b>Descripcion</b>
                    <h3 class="fw-400">@currentService.ServiceDescription</h3>
                </div>
                <div class="col-lg-4">
                    <b>Duración estimada</b>
                    <h3 class="fw-400">@currentService.EstimatedDurationInMinutes minutos</h3>
                    <b>Estado</b>
                    <span class="badge @(currentService.IsActive ? "bg-success" : "bg-secondary")">@(currentService.IsActive ? "Activo" : "Pausado")</span>
                </div>
                <div class="col-lg-2 mt-4">
                    <button @onclick="() => ManageService(currentService.ServiceId)" class="btn btn-outline-info btn-sm" type="button">Gestionar</button>
                </div>
            </div>
        }

        @if (currentService.ServiceId != 0)
        {
            <!-- Add FROM/TO date pickers and a button to create new schedules -->
            <RadzenGrid Count=@currentServiceSchedulesCount Data=@currentServiceSchedules LoadData=@OnLoadData AllowPaging="true" TItem="ServiceSchedule">
                <Columns>
                    <RadzenGridColumn TItem="ServiceSchedule" Property="FormattedStartDate" Title="Fecha de inicio" />
                    <RadzenGridColumn TItem="ServiceSchedule" Property="FormattedEndDate" Title="Fecha final" />
                    <RadzenGridColumn TItem="ServiceSchedule" Property="FormattedStartTime" Title="Hora de inicio" />
                    <RadzenGridColumn TItem="ServiceSchedule" Property="FormattedEndTime" Title="Hora de finalización" />
                    <RadzenGridColumn TItem="ServiceSchedule" Property="Capacity" Title="Capacidad" />
                    <RadzenGridColumn TItem="ServiceSchedule" Property="ScheduledCount" Title="Cantidad programada" />

                    <RadzenGridColumn TItem="ServiceSchedule" Title="">
                        <Template Context="scheduleData">
                            <button @onclick="() => EditSingleSchedule(scheduleData.ServiceScheduleId)" class="btn btn-outline-info btn-sm" type="button">Editar</button>
                        </Template>
                    </RadzenGridColumn>
                    <RadzenGridColumn TItem="ServiceSchedule" Title="">
                        <Template Context="scheduleData">
                            <button @onclick="() => DeleteSingleSchedule(scheduleData.ServiceScheduleId)" class="btn btn-outline-danger btn-sm" type="button">Eliminar</button>
                        </Template>
                    </RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        }
    </div>
    <div class="col-lg-4">
        @if (currentService.ServiceId == 0)
        {
            <h2 class="fw-400">Seleccione el servicio que desea ver</h2>
            <RadzenDropDown Placeholder="Servicio" AllowClear="false" TValue="int" TextProperty="ServiceName"
                        ValueProperty="ServiceId" Data=@servicesOffered @bind-Value=@selectedServiceId
                        Change=@OnServiceChange />
            <hr />
        }
        <button @onclick="CreateService" class="btn btn-outline-info btn-sm" type="button">Crear un servicio</button>
    </div>
</div>

@code {
    private int selectedServiceId;
    private EmployeeService currentService = new EmployeeService();
    private List<EmployeeService> servicesOffered = new List<EmployeeService>();

    private int currentServiceSchedulesCount;
    private List<ServiceSchedule> currentServiceSchedules = new List<ServiceSchedule>();

    protected override async Task OnParametersSetAsync()
    {

    }

    private async Task ManageService(int serviceId)
    {

    }

    private async Task OnServiceChange()
    {

    }

    private async Task CreateService()
    {

    }

    private async Task OnLoadData(LoadDataArgs args)
    {

    }

    private async Task EditSingleSchedule(int serviceScheduleId)
    {

    }

    private async Task DeleteSingleSchedule(int serviceScheduleId)
    {

    }
}
